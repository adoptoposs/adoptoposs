ARG ELIXIR_VERSION=1.13.4
ARG OTP_VERSION=25.0.3
ARG DEBIAN_VERSION=bullseye-20210902-slim

ARG BUILDER_IMAGE="hexpm/elixir:${ELIXIR_VERSION}-erlang-${OTP_VERSION}-debian-${DEBIAN_VERSION}"
FROM ${BUILDER_IMAGE} as dev-build

# install build dependencies
RUN apt-get update -y && apt-get install -y build-essential curl git inotify-tools \
  && apt-get clean && rm -f /var/lib/apt/lists/*_*

# install yarn
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
  && apt-get update -y && apt-get install yarn -y

# set host user if configured in .env, also see conpose.yaml
ARG DOCKER_USER
ENV DOCKER_USER $DOCKER_USER
ARG USER_ID
ENV USER_ID $USER_ID
ARG GROUP_ID
ENV GROUP_ID $GROUP_ID

RUN echo "current user: $DOCKER_USER"

RUN if [ ${USER_ID:-0} -ne 0 ] && [ ${GROUP_ID:-0} -ne 0 ] && [ ${DOCKER_USER:-root} != root ]; then \
    groupadd -g $GROUP_ID $DOCKER_USER && \
    useradd -u $USER_ID -g $DOCKER_USER -m $DOCKER_USER && \
    usermod -p "*" $DOCKER_USER && \
    usermod -aG sudo $DOCKER_USER \
;fi

USER $DOCKER_USER

# prepare build dir
WORKDIR /app

# install hex + rebar
RUN mix local.hex --force && \
    mix local.rebar --force

COPY mix* ./

RUN mix do \
    local.hex --force, \
    local.rebar --force

# install and compile hex and npm dependencies
FROM dev-build as ci

RUN mix do \
    deps.get, \
    deps.compile, \
    compile

COPY assets/package.json assets/yarn.lock /app/assets/
RUN cd assets && yarn install

COPY . ./
